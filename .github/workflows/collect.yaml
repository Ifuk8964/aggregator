name: Collect
on:
  # executed once a week on Sundays at 00:00
  schedule:
    - cron: "0 0 * * 1"
  workflow_dispatch:

concurrency:
  group: ${{ github.repository }}
  cancel-in-progress: true

env:
  # time zone
  TZ: Asia/Shanghai

  # github access token
  GIST_PAT: ${{ secrets.GIST_PAT }}

  # github username and gist id, separated by '/'
  GIST_LINK: ${{ secrets.GIST_LINK }}

  # the url to the list of airports that you maintain yourself
  # each line include domain, coupon and invitation code, the domain must be included, and the latter two items are optional
  CUSTOMIZE_LINK: ${{ secrets.CUSTOMIZE_LINK }}

  # include special protocols, such as vless hysteria2 and hysteria
  ENABLE_SPECIAL_PROTOCOLS: ${{ vars.ENABLE_SPECIAL_PROTOCOLS }}

jobs:
  process:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Prepare
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          architecture: "x64"
          cache: "pip"

      - name: Install
        run: pip3 install -r requirements.txt

      - name: Check
        run: |
          if [ -z "$GIST_PAT" ]; then
              echo "Error: environment 'GIST_PAT' cannot be empty"
              exit 1
          fi

          if [ -z "$GIST_LINK" ]; then
              echo "Error: environment 'GIST_LINK' cannot be empty"
              exit 1
          fi

          LINK_PARTS=$(echo "$GIST_LINK" | awk -F'/' 'NF==2 && $1!="" && $2!=""')
          if [ -z "$LINK_PARTS" ]; then
              echo "Error: environment 'GIST_LINK' is not valid, should be 'username/gist_id' format"
              exit 1
          fi

      - name: Filter Russian Nodes
        run: |
          python -c "
import json

# 读取节点信息
with open('nodes.json', 'r') as file:
    nodes = json.load(file)

# 过滤掉包含俄罗斯的节点
filtered_nodes = [node for node in nodes if 'Russia' not in node.get('name', '') and '俄罗斯' not in node.get('name', '')]

# 写入过滤后的结果
with open('nodes.json', 'w') as file:
    json.dump(filtered_nodes, file, ensure_ascii=False, indent=2)
"

      - name: Upload to Gist
        run: python -u subscribe/upload_to_gist.py nodes.json
     
      - name: Timestamp
        run: date
